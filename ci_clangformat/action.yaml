# Copyright 2024 Google LLC

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     https://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
name: "Check clang-format"
description: 'Action to run clang-format on changed files'
inputs:
  clang_format_version:
    description: 'The clang-format version to use.'
    required: true
    default: "20.1.5"
  branch_name:
    description: 'The repository branch used for fetching comparisons.'
    required: true
    default: 'main'

runs:
  using: "composite"
  steps:
  - name: "Checking out repository"
    uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
  - name: "Fetch HEAD of ${{ inputs.branch_name }} branch"
    shell: bash
    run: git fetch origin ${{ inputs.branch_name }} --depth=1
  - name: Run clang-format check
    id: check-format
    shell: bash
    run: |
      REPO_CLANG_FORMAT=".clang-format"
      ACTION_DEFAULT_CLANG_FORMAT="${{ github.action_path }}/.clang-format.default"

      if [ -f "$REPO_CLANG_FORMAT" ]; then
        echo "::notice::Using repository's .clang-format file."
        # uvx (an alias for `uv tool run`) installs and runs clang-format with a specific version.
        uvx clang-format==${{ inputs.clang_format_version }} --dry-run --Werror --verbose $(git diff --name-only origin/main HEAD -- '*.cc' '*.h')
      else
        echo "::notice::Repository does not have a .clang-format file. Using the action's default."
        uvx clang-format==${{ inputs.clang_format_version }} -style=file:$ACTION_DEFAULT_CLANG_FORMAT --dry-run --Werror --verbose $(git diff --name-only origin/main HEAD -- '*.cc' '*.h')
      fi
